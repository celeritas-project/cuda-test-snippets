
Fatbin elf code:
================
arch = sm_35
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_35
code version = [6,5]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 6.5
.target sm_35
.address_size 64


.extern .func (.param .b32 func_retval0) vprintf
(
.param .b64 vprintf_param_0,
.param .b64 vprintf_param_1
)
;
.global .align 1 .b8 $str[19] = {73, 110, 116, 32, 37, 100, 44, 32, 100, 111, 117, 98, 108, 101, 32, 37, 102, 10, 0};

.visible .entry _Z12print_valuesPKiPKdPi(
.param .u64 _Z12print_valuesPKiPKdPi_param_0,
.param .u64 _Z12print_valuesPKiPKdPi_param_1,
.param .u64 _Z12print_valuesPKiPKdPi_param_2
)
{
.local .align 16 .b8 __local_depot0[16];
.reg .b64 %SP;
.reg .b64 %SPL;
.reg .pred %p<2>;
.reg .b32 %r<7>;
.reg .f64 %fd<3>;
.reg .b64 %rd<16>;


mov.u64 %SPL, __local_depot0;
cvta.local.u64 %SP, %SPL;
ld.param.u64 %rd1, [_Z12print_valuesPKiPKdPi_param_0];
ld.param.u64 %rd2, [_Z12print_valuesPKiPKdPi_param_1];
ld.param.u64 %rd3, [_Z12print_valuesPKiPKdPi_param_2];
cvta.to.global.u64 %rd4, %rd3;
cvta.to.global.u64 %rd5, %rd2;
cvta.to.global.u64 %rd6, %rd1;
mov.u32 %r1, %tid.x;
mul.wide.s32 %rd7, %r1, 4;
add.s64 %rd8, %rd6, %rd7;
ld.global.u32 %r2, [%rd8];
mul.wide.s32 %rd9, %r1, 8;
add.s64 %rd10, %rd5, %rd9;
ld.global.f64 %fd1, [%rd10];
add.u64 %rd11, %SP, 0;
add.u64 %rd12, %SPL, 0;
st.local.u32 [%rd12], %r2;
st.local.f64 [%rd12+8], %fd1;
mov.u64 %rd13, $str;
cvta.global.u64 %rd14, %rd13;

	{
.reg .b32 temp_param_reg;

	.param .b64 param0;
st.param.b64	[param0+0], %rd14;
.param .b64 param1;
st.param.b64	[param1+0], %rd11;
.param .b32 retval0;
call.uni (retval0), 
vprintf, 
(
param0, 
param1
);
ld.param.b32	%r3, [retval0+0];


	}
	ld.global.u32 %r4, [%rd8];
ld.global.f64 %fd2, [%rd10];
setp.gt.f64	%p1, %fd2, 0d0000000000000000;
selp.u32	%r5, 1, 0, %p1;
add.s32 %r6, %r5, %r4;
add.s64 %rd15, %rd4, %rd7;
st.global.u32 [%rd15], %r6;
ret;
}


