
Fatbin ptx code:
================
arch = sm_70
code version = [7,5]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 7.5
.target sm_70
.address_size 64



.visible .entry _Z17soft_equal_kernelPbPdS0_dd(
.param .u64 _Z17soft_equal_kernelPbPdS0_dd_param_0,
.param .u64 _Z17soft_equal_kernelPbPdS0_dd_param_1,
.param .u64 _Z17soft_equal_kernelPbPdS0_dd_param_2,
.param .f64 _Z17soft_equal_kernelPbPdS0_dd_param_3,
.param .f64 _Z17soft_equal_kernelPbPdS0_dd_param_4
)
{
.reg .pred %p<14>;
.reg .b16 %rs<10>;
.reg .b32 %r<10>;
.reg .f64 %fd<10>;
.reg .b64 %rd<12>;


ld.param.u64 %rd2, [_Z17soft_equal_kernelPbPdS0_dd_param_0];
ld.param.u64 %rd3, [_Z17soft_equal_kernelPbPdS0_dd_param_1];
ld.param.u64 %rd4, [_Z17soft_equal_kernelPbPdS0_dd_param_2];
ld.param.f64 %fd5, [_Z17soft_equal_kernelPbPdS0_dd_param_3];
ld.param.f64 %fd6, [_Z17soft_equal_kernelPbPdS0_dd_param_4];
mov.u32 %r3, %tid.x;
cvt.u64.u32 %rd1, %r3;
cvta.to.global.u64 %rd5, %rd3;
mul.wide.u32 %rd6, %r3, 8;
add.s64 %rd7, %rd5, %rd6;
cvta.to.global.u64 %rd8, %rd4;
add.s64 %rd9, %rd8, %rd6;
ld.global.f64 %fd1, [%rd7];
abs.f64 %fd2, %fd1;
ld.global.f64 %fd3, [%rd9];
sub.f64 %fd7, %fd3, %fd1;
abs.f64 %fd8, %fd7;
mul.f64 %fd9, %fd2, %fd6;
setp.lt.f64 %p1, %fd8, %fd9;
mov.u16 %rs9, 1;
@%p1 bra $L__BB0_6;

abs.f64 %fd4, %fd3;
setp.lt.f64 %p2, %fd4, %fd6;
setp.lt.f64 %p3, %fd2, %fd5;
and.pred %p4, %p3, %p2;
@%p4 bra $L__BB0_6;

setp.lt.f64 %p5, %fd4, %fd5;
setp.lt.f64 %p6, %fd2, %fd6;
and.pred %p7, %p6, %p5;
@%p7 bra $L__BB0_6;

{
.reg .b32 %temp; 
mov.b64 {%r4, %temp}, %fd1;
}
{
.reg .b32 %temp; 
mov.b64 {%temp, %r1}, %fd1;
}
and.b32 %r5, %r1, 2147483647;
setp.ne.s32 %p8, %r5, 2146435072;
setp.ne.s32 %p9, %r4, 0;
or.pred %p10, %p9, %p8;
mov.u16 %rs9, 0;
@%p10 bra $L__BB0_6;

{
.reg .b32 %temp; 
mov.b64 {%r6, %temp}, %fd3;
}
{
.reg .b32 %temp; 
mov.b64 {%temp, %r2}, %fd3;
}
and.b32 %r7, %r2, 2147483647;
setp.ne.s32 %p11, %r7, 2146435072;
setp.ne.s32 %p12, %r6, 0;
or.pred %p13, %p12, %p11;
@%p13 bra $L__BB0_6;

xor.b32 %r8, %r2, %r1;
shr.u32 %r9, %r8, 31;
cvt.u16.u32 %rs8, %r9;
xor.b16 %rs9, %rs8, 1;

$L__BB0_6:
cvta.to.global.u64 %rd10, %rd2;
add.s64 %rd11, %rd10, %rd1;
st.global.u8 [%rd11], %rs9;
ret;

}

