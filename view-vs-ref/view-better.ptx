
Fatbin elf code:
================
arch = sm_35
code version = [1,7]
producer = <unknown>
host = linux
compile_size = 64bit

Fatbin ptx code:
================
arch = sm_35
code version = [6,5]
producer = <unknown>
host = linux
compile_size = 64bit
compressed








.version 6.5
.target sm_35
.address_size 64



.visible .entry _Z4move12ParticleView(
.param .align 8 .b8 _Z4move12ParticleView_param_0[64]
)
{
.reg .pred %p<2>;
.reg .b32 %r<12>;
.reg .f64 %fd<11>;
.reg .b64 %rd<23>;


ld.param.u64 %rd7, [_Z4move12ParticleView_param_0+56];
ld.param.u64 %rd6, [_Z4move12ParticleView_param_0+48];
ld.param.u64 %rd5, [_Z4move12ParticleView_param_0+40];
ld.param.u64 %rd4, [_Z4move12ParticleView_param_0+32];
ld.param.u64 %rd3, [_Z4move12ParticleView_param_0+24];
ld.param.u64 %rd2, [_Z4move12ParticleView_param_0+16];
ld.param.u64 %rd1, [_Z4move12ParticleView_param_0+8];
ld.param.u32 %r2, [_Z4move12ParticleView_param_0];
mov.u32 %r3, %ctaid.y;
mov.u32 %r4, %nctaid.x;
mov.u32 %r5, %ctaid.x;
mad.lo.s32 %r6, %r3, %r4, %r5;
mov.u32 %r7, %ntid.y;
mov.u32 %r8, %tid.y;
mad.lo.s32 %r9, %r6, %r7, %r8;
mov.u32 %r10, %ntid.x;
mov.u32 %r11, %tid.x;
mad.lo.s32 %r1, %r9, %r10, %r11;
setp.ge.s32	%p1, %r1, %r2;
@%p1 bra BB0_2;

cvta.to.global.u64 %rd8, %rd7;
cvta.to.global.u64 %rd9, %rd6;
cvta.to.global.u64 %rd10, %rd5;
cvta.to.global.u64 %rd11, %rd4;
cvta.to.global.u64 %rd12, %rd3;
cvta.to.global.u64 %rd13, %rd2;
cvta.to.global.u64 %rd14, %rd1;
mul.wide.s32 %rd15, %r1, 8;
add.s64 %rd16, %rd8, %rd15;
add.s64 %rd17, %rd11, %rd15;
ld.global.f64 %fd1, [%rd17];
ld.global.f64 %fd2, [%rd16];
add.s64 %rd18, %rd14, %rd15;
ld.global.f64 %fd3, [%rd18];
fma.rn.f64 %fd4, %fd2, %fd1, %fd3;
st.global.f64 [%rd18], %fd4;
add.s64 %rd19, %rd10, %rd15;
ld.global.f64 %fd5, [%rd19];
add.s64 %rd20, %rd13, %rd15;
ld.global.f64 %fd6, [%rd20];
fma.rn.f64 %fd7, %fd2, %fd5, %fd6;
st.global.f64 [%rd20], %fd7;
add.s64 %rd21, %rd9, %rd15;
ld.global.f64 %fd8, [%rd21];
add.s64 %rd22, %rd12, %rd15;
ld.global.f64 %fd9, [%rd22];
fma.rn.f64 %fd10, %fd2, %fd8, %fd9;
st.global.f64 [%rd22], %fd10;

BB0_2:
ret;
}


